{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matta\\\\OneDrive\\\\Documentos\\\\GitHub\\\\react_game_tron\\\\src\\\\components\\\\Board.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { GAME_READY, UNIT, BOARD_SIZE } from 'config/const';\nexport default function Board(_ref) {\n  let {\n    players,\n    gameStatus\n  } = _ref;\n  const canvasRef = useRef();\n  useEffect(function () {\n    if (gameStatus === GAME_READY) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, BOARD_SIZE, BOARD_SIZE);\n      context.beginPath();\n      context.strokeStyle = '#001900';\n\n      for (let i = UNIT * 2; i <= BOARD_SIZE; i += UNIT * 2) {\n        context.moveTo(i, 0);\n        context.lineTo(i, BOARD_SIZE);\n      }\n\n      for (let i = UNIT * 2; i <= BOARD_SIZE; i += UNIT * 2) {\n        context.moveTo(0, i);\n        context.lineTo(BOARD_SIZE, i);\n      }\n\n      context.stroke();\n      context.closePath();\n    }\n  }, [gameStatus]);\n  useEffect(function () {\n    const context = canvasRef.current.getContext('2d');\n    players.forEach(player => {\n      context.fillStyle = player.color;\n      context.fillRect(player.position.x, player.position.y, UNIT, UNIT);\n    });\n  }, [players]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    id: \"board\",\n    width: BOARD_SIZE,\n    height: BOARD_SIZE,\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, players.map(player => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"instructions__player\",\n    style: {\n      color: player.color\n    },\n    key: `player--${player.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, `${player.id}: ${player.instructions}`))));\n}","map":{"version":3,"sources":["C:/Users/matta/OneDrive/Documentos/GitHub/react_game_tron/src/components/Board.js"],"names":["React","useEffect","useRef","GAME_READY","UNIT","BOARD_SIZE","Board","players","gameStatus","canvasRef","canvas","current","context","getContext","clearRect","beginPath","strokeStyle","i","moveTo","lineTo","stroke","closePath","forEach","player","fillStyle","color","fillRect","position","x","y","map","id","instructions"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,UAA1B,QAA2C,cAA3C;AAEA,eAAe,SAASC,KAAT,OAAsC;AAAA,MAAvB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAuB;AACnD,QAAMC,SAAS,GAAGP,MAAM,EAAxB;AACAD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIO,UAAU,KAAKL,UAAnB,EAA+B;AAC7B,YAAMO,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,YAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;AACAD,MAAAA,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBT,UAAxB,EAAoCA,UAApC;AAEAO,MAAAA,OAAO,CAACG,SAAR;AACAH,MAAAA,OAAO,CAACI,WAAR,GAAsB,SAAtB;;AACA,WAAK,IAAIC,CAAC,GAAGb,IAAI,GAAG,CAApB,EAAuBa,CAAC,IAAIZ,UAA5B,EAAwCY,CAAC,IAAIb,IAAI,GAAG,CAApD,EAAuD;AACrDQ,QAAAA,OAAO,CAACM,MAAR,CAAeD,CAAf,EAAkB,CAAlB;AACAL,QAAAA,OAAO,CAACO,MAAR,CAAeF,CAAf,EAAkBZ,UAAlB;AACD;;AACD,WAAK,IAAIY,CAAC,GAAGb,IAAI,GAAG,CAApB,EAAuBa,CAAC,IAAIZ,UAA5B,EAAwCY,CAAC,IAAIb,IAAI,GAAG,CAApD,EAAuD;AACrDQ,QAAAA,OAAO,CAACM,MAAR,CAAe,CAAf,EAAkBD,CAAlB;AACAL,QAAAA,OAAO,CAACO,MAAR,CAAed,UAAf,EAA2BY,CAA3B;AACD;;AACDL,MAAAA,OAAO,CAACQ,MAAR;AACAR,MAAAA,OAAO,CAACS,SAAR;AACD;AAEF,GApBQ,EAoBN,CAACb,UAAD,CApBM,CAAT;AAsBAP,EAAAA,SAAS,CACP,YAAY;AACV,UAAMW,OAAO,GAAGH,SAAS,CAACE,OAAV,CAAkBE,UAAlB,CAA6B,IAA7B,CAAhB;AACAN,IAAAA,OAAO,CAACe,OAAR,CAAiBC,MAAD,IAAY;AAC1BX,MAAAA,OAAO,CAACY,SAAR,GAAoBD,MAAM,CAACE,KAA3B;AACAb,MAAAA,OAAO,CAACc,QAAR,CAAiBH,MAAM,CAACI,QAAP,CAAgBC,CAAjC,EAAoCL,MAAM,CAACI,QAAP,CAAgBE,CAApD,EAAuDzB,IAAvD,EAA6DA,IAA7D;AACD,KAHD;AAID,GAPM,EAQP,CAACG,OAAD,CARO,CAAT;AAUA,sBACE,uDACE;AAAQ,IAAA,GAAG,EAAEE,SAAb;AAAwB,IAAA,EAAE,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAEJ,UAA1C;AAAsD,IAAA,MAAM,EAAEA,UAA9D;AAA0E,IAAA,SAAS,EAAC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,CAACuB,GAAR,CAAaP,MAAD,iBACX;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAEF,MAAM,CAACE;AAAf,KAFT;AAGE,IAAA,GAAG,EAAG,WAAUF,MAAM,CAACQ,EAAG,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,GAAER,MAAM,CAACQ,EAAG,KAAIR,MAAM,CAACS,YAAa,EALxC,CADD,CADH,CAFF,CADF;AAgBD","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport {GAME_READY, UNIT, BOARD_SIZE} from 'config/const';\n\nexport default function Board({players, gameStatus}) {\n  const canvasRef = useRef();\n  useEffect(function () {\n    if (gameStatus === GAME_READY) {\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.clearRect(0, 0, BOARD_SIZE, BOARD_SIZE)\n  \n      context.beginPath();\n      context.strokeStyle = '#001900';\n      for (let i = UNIT * 2; i <= BOARD_SIZE; i += UNIT * 2) {\n        context.moveTo(i, 0);\n        context.lineTo(i, BOARD_SIZE);\n      }\n      for (let i = UNIT * 2; i <= BOARD_SIZE; i += UNIT * 2) {\n        context.moveTo(0, i);\n        context.lineTo(BOARD_SIZE, i);\n      }\n      context.stroke();\n      context.closePath();\n    }\n\n  }, [gameStatus]);\n\n  useEffect(\n    function () {\n      const context = canvasRef.current.getContext('2d');\n      players.forEach((player) => {\n        context.fillStyle = player.color;\n        context.fillRect(player.position.x, player.position.y, UNIT, UNIT);\n      });\n    },\n    [players]\n  );\n  return (\n    <>\n      <canvas ref={canvasRef} id=\"board\" width={BOARD_SIZE} height={BOARD_SIZE} className=\"board\" />\n      <div className=\"instructions\">\n        {players.map((player) => (\n          <div\n            className=\"instructions__player\"\n            style={{color: player.color}}\n            key={`player--${player.id}`}\n          >\n            {`${player.id}: ${player.instructions}`}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}